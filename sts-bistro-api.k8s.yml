apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: sts-bistro-api-health-check-config
  namespace: sts-bistro-api
spec:
  healthCheck:
    requestPath: /health-check
    type: HTTP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sts-bistro-api-nginx-config
  namespace: sts-bistro-api
data:
  nginx-default.conf: |
    server {
        listen 80 default;

        client_max_body_size 108M;

        access_log /var/log/nginx/application.access.log;

        root /application/app/public;
        index index.php;

        location / {
            try_files $uri /index.php$is_args$args;
        }
        
        location /bundles {
            try_files $uri =404;
        }

        if (!-e $request_filename) {
            rewrite ^.*$ /index.php last;
        }

        location ~ \.php$ {
            fastcgi_pass localhost:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PHP_VALUE "error_log=/var/log/nginx/application_php_errors.log";
            fastcgi_buffers 16 16k;
            fastcgi_buffer_size 32k;
            include fastcgi_params;
        }

    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sts-bistro-api-api
  namespace: sts-bistro-api
spec:
  replicas: 1
  selector:
    matchLabels:
      name: sts-bistro-api
  template:
    metadata:
      labels:
        name: sts-bistro-api
    spec:
      restartPolicy: Always
      containers:
        - name: sts-bistro-api-php-fpm
          image: gcr.io/tech-stuff-304507/sts-bistro-api-php-fpm:v<VERSION>
          resources:
            requests:
              memory: "500Mi"
              cpu: "250m"
            limits:
              memory: "1000Mi"
              cpu: "500m"
          envFrom:
            - configMapRef:
                name: sts-bistro-api-config
        - name: sts-bistro-api-nginx
          image: nginx:alpine
          ports:
            - containerPort: 80
          volumeMounts:
            - name: sts-bistro-api-nginx-conf
              mountPath: /etc/nginx/conf.d
              readOnly: false
      volumes:
        - name: sts-bistro-api-nginx-conf
          configMap:
            name: sts-bistro-api-nginx-config
            items:
              - key: nginx-default.conf
                path: default.conf
---
apiVersion: batch/v1
kind: Job
metadata:
  name: sts-bistro-api-migrations-migrate-v<VERSION>
  namespace: sts-bistro-api
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: sts-bistro-api-migrations-migrate
          image: gcr.io/tech-stuff-304507/sts-bistro-api-php-fpm:v<VERSION>
          command: [ "php", "bin/console", "doctrine:migrations:migrate", "--no-interaction" ]
          workingDir: /application/app
          envFrom:
            - configMapRef:
                name: sts-bistro-api-config
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
    cloud.google.com/backend-config: '{"default": "sts-bistro-api-health-check-config"}'
  name: sts-bistro-api-80
  namespace: sts-bistro-api
spec:
  selector:
    name: sts-bistro-api
  type: NodePort
  #  externalTrafficPolicy: Cluster
  ports:
    - name: http
      port: 80
      targetPort: 80
      # nodePort: 32267  # je≈ºeli brak, to port zostaje dobrany automatycznie
      protocol: TCP
  sessionAffinity: None
status:
  loadBalancer: {}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: sts-bistro-order-remainders
  namespace: sts-bistro-api
spec:
  schedule: "* 9-13 * * 1-5"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          # suspend below only for testing stage
          containers:
            - name: sts-bistro-api-php-fpm
              image: gcr.io/tech-stuff-304507/sts-bistro-api-php-fpm:v<VERSION>
              command: [ "php", "app/bin/console", "app:send:remainder" ]
              envFrom:
                - configMapRef:
                    name: sts-bistro-api-config
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: sts-bistro-user-blockade
  namespace: sts-bistro-api
spec:
  schedule: "0 0 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          # suspend below only for testing stage
          containers:
            - name: sts-bistro-api-php-fpm
              image: gcr.io/tech-stuff-304507/sts-bistro-api-php-fpm:v<VERSION>
              command: [ "php", "app/bin/console", "app:user:block", "-vvv" ]
              envFrom:
                - configMapRef:
                    name: sts-bistro-api-config
